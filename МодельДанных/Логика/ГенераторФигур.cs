using System;
using Тетрис.МодельДанных.Интерфейсы;
using Тетрис.МодельДанных.Модели;

namespace Тетрис.МодельДанных.Логика
{
	class ГенераторФигур : IГенераторФигур
	{
		static readonly ШаблонФигуры[] Шаблоны =
		{
			new ШаблонФигуры("КочергаЛ", new [] { (0, -1), (1, -1), (1, 0), (1, 1) }),
			new ШаблонФигуры("КочергаП", new [] { (0, 1), (1, -1), (1, 0), (1, 1) }),
			new ШаблонФигуры("СтупеньЛ", new [] { (0, 1), (0, 0), (1, 0), (1, -1) }),
			new ШаблонФигуры("СтупеньП", new [] { (0, -1), (0, 0), (1, 0), (1, 1) }),
			new ШаблонФигуры("Квадрат", new [] { (0, -1), (1, -1), (0, 0), (1, 0) }),
			new ШаблонФигуры("Палка", new [] { (1, -1), (1, 0), (1, 1), (1, 2) }),
			new ШаблонФигуры("Полукрест", new [] { (0, 0), (1, -1), (1, 0), (1, 1) }),
		};
		readonly Random Случайник = new Random();
		public Фигура Получить(Позиция позиция)
		{
			var индексШаблона = Случайник.Next(Шаблоны.Length);
			var индексОриентации = Случайник.Next(УголПоворота.ПолныйУгол / УголПоворота.ШагПоворота);
			var фигура = new Фигура(
				позиция,
				УголПоворота._0.ПротивЧасовой(индексОриентации),
				Шаблоны[индексШаблона]);
			return фигура;
		}
	}
}
